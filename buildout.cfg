[buildout]
newest = false
prefer-final = false
download-cache = .cache
develop = .
parts = 

[project]
name = infi.projector
homepage = https://github.com/Infinidat/${project:name}
namespace_packages = ['infi']
install_requires = ['infi.execute', 'gitflow', 'zc.buildout', 'infi.recipe.template.version', 'setuptools', 'infi.pyutils', 'git-py', 'docopt']
version_file = src/infi/projector/__version__.py
description = Python, git-flow based project management tool
long_description = For the complete document, see the README.md file over at GitHub
console_scripts = ['projector = infi.projector.scripts:projector']
gui_scripts = []
package_data = ['buildout.cfg', '.gitignore', 'README.md', 'bootstrap.py', 'setup.in']
upgrade_code = {5180d8a8-ea0a-11e1-ad0a-1093e90fe436}
product_name = infi.projector
post_install_script_name = None
pre_uninstall_script_name = None
command_plugins = ['repository = infi.projector.plugins.builtins.repository:RepositoryPlugin', 'envenv = infi.projector.plugins.builtins.devenv:DevEnvPlugin', 'version = infi.projector.plugins.builtins.version:VersionPlugin', 'requirements = infi.projector.plugins.builtins.requirements:RequirementsPlugin', 'console_scripts = infi.projector.plugins.builtins.console_scripts:ConsoleScriptsPlugin', 'gui_scripts = infi.projector.plugins.builtins.gui_scripts:GuiScriptsPlugin', 'package_scripts = infi.projector.plugins.builtins.package_scripts:PackageScriptsPlugin', 'package_data = infi.projector.plugins.builtins.package_data:PackageDataPlugin', 'isolated_pyton = infi.projector.plugins.builtins.isolated_python:IsolatedPythonPlugin', 'submodules = infi.projector.plugins.builtins.submodules:SubmodulePlugin']

[isolated-python]
recipe = infi.recipe.python
version = v2.7.6.22

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__version__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}
input = inline:
	__version__ = "${infi.recipe.template.version:version}"
	__git_commiter_name__ = "${infi.recipe.template.version:author}"
	__git_commiter_email__ = "${infi.recipe.template.version:author_email}"
	__git_branch__ = ${infi.recipe.template.version:git_local_branch}
	__git_remote_tracking_branch__ = ${infi.recipe.template.version:git_remote_tracking_branch}
	__git_remote_url__ = ${infi.recipe.template.version:git_remote_url}
	__git_head_hash__ = ${infi.recipe.template.version:head_hash}
	__git_head_subject__ = ${infi.recipe.template.version:head_subject}
	__git_head_message__ = ${infi.recipe.template.version:head_message}
	__git_dirty_diff__ = ${infi.recipe.template.version:dirty_diff}

[development-scripts]
dependent-scripts = true
recipe = infi.recipe.console_scripts
eggs = ${project:name}
	ipython
	nose
	mock
	coverage
	pylint
	infi.unittest
	infi.traceback
interpreter = python

[eclipse]
recipe = rbco.recipe.pyeclipse
project-name = ${project:name}
project-directory = ${buildout:directory}
python-version = 2.7
source-resources = ${buildout:directory}/src

[pydev]
recipe = pb.recipes.pydev
eggs = ${development-scripts:eggs}

[pack]
recipe = infi.recipe.application_packager
company = None

[sublime]
recipe = corneti.recipes.codeintel
eggs = ${development-scripts:eggs}

